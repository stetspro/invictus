<% if current_user.route != [] %>
  <%= render partial: 'systems/route_card' %>
<% end %>

<div class="card black-card map-card">
  <h5 class="card-header"><%= I18n.t('navbar.map') %></h5>
  <div class="speech-bubble"></div>
  <div class="card-body" id="map">
    
  </div>
</div>

<style>
  #map {
    overflow: hidden;
    padding: 0;
  }
  
  .speech-bubble {
    z-index: 10;
    display: block;
    top: -1000px;
    left: -1000px;
  	position: absolute;
  	background: #5d5d5d;
  	border-radius: .4em;
  }
  
  .speech-bubble:after {
  	content: '';
  	position: absolute;
  	bottom: 0;
  	left: 50%;
  	width: 0;
  	height: 0;
  	border: 20px solid transparent;
  	border-top-color: #191919;
  	border-bottom: 0;
  	margin-left: -20px;
  	margin-bottom: -20px;
  }
</style>

<script>
  // create an array with nodes
    var nodes = new vis.DataSet([
      <% System.mapdata['systems'].each do |key, val| %>
        {id: <%= key %>, label: "<%= val['faction'] %> <%= val['name'] %>", image: "<%= image_url("planets/star_#{val['security']}.png") %>", font: {<%= "size: 20, color: 'yellow'".html_safe if current_user.system_id == key %>} },
      <% end %>
    ]);

    // create an array with edges
    var edges = new vis.DataSet([
      <% System.mapdata['jumpgates'].each do |key, val| %>
          {id: <%= key %>, from: <%= val['from'] %>, to: <%= val['to'] %>},
      <% end %>
    ]);

    // create a network
    var container = document.getElementById('map');

    // provide the data in the vis format
    var data = {
        nodes: nodes,
        edges: edges
    };
    
    // set options
    var options = {
      autoResize: true,
      height: '600px',
      width: '100%',
      nodes: {
        shape: 'image',
        size: 20,
        fixed: true,
        font: { color: 'white' }
      },
      edges: {
        color: { color: 'grey' },
        selectionWidth: 0
      },
      physics: { enabled: false },
      // Seeds: 626344
      layout: { randomSeed: 576136 },
      interaction: { selectConnectedEdges: false }
    };

    // initialize your network!
    var network = new vis.Network(container, data, options);
    
    // get info from node on select
    network.on("click", function (params) {
      if (params.nodes.length) {
        var id = params.nodes[0]
        var position = network.canvasToDOM(network.getPositions([id])[id])
        
        $.get('system/info', {id: id}, function(data) {
          $('.speech-bubble').html(data);
          setTimeout(function() { 
            $('.speech-bubble').css({position: 'absolute', top: position.y-$('.speech-bubble').height()+10, left: position.x-($('.speech-bubble').width() / 2)}); 
          }, 10)
        }); 
      }
    });
    
    network.on("zoom", function () {
      $('.speech-bubble').css({position: 'absolute', top: -1000, left: -1000, display: 'block'}); 
    });
    
    network.on("dragStart", function () {
      $('.speech-bubble').css({position: 'absolute', top: -1000, left: -1000, display: 'block'}); 
    });
    
    // draw route if user has one
    <% if current_user.route %>
      <% current_user.route.each do |step| %>
        var edge = edges.get(<%= step %>);
        edges.remove(<%= step %>);
        edges.add({id: <%= step %>, from: edge.from, to: edge.to, color: { color: 'red' }, width: 5});
      <% end %>
    <% end %>

    // create route button
    $('.speech-bubble').on('click', '.get-route-btn', function() {
      var id = $(this).data('id');
      var button = $(this);
      var html = $(this).html();
      
      loading_animation($(this));
      
      $.post('system/route', {id: id}, function(data) {
        if ($('.route-card').length) {
          $('.route-card').remove();
        }
        $(data.card).insertBefore($('.map-card'));
        $.each(data.old_route, function(index, value) {
          var edge = edges.get(value);
          edges.remove(value);
          edges.add({id: value, from: edge.from, to: edge.to, color: { color: 'grey' }, width: 1});
        });
        $.each(data.route, function(index, value) {
          var edge = edges.get(value);
          edges.remove(value);
          edges.add({id: value, from: edge.from, to: edge.to, color: { color: 'red' }, width: 5});
        });
        button.html(html);
        $('.speech-bubble').css({position: 'absolute', top: -1000, left: -1000, display: 'block'}); 
      }).error(function(data) { button.html(html); });
    });
    
    // Jump Drive Btn
    var jump_drive_btn_interval;
    $('.speech-bubble').on('click', '.jump-drive-btn', function() {
      var id = $(this).data('id');
      var button = $(this);
      var html = $(this).html();
      
      loading_animation($(this));
      
      $.post('system/jump_drive', {id: id}, function(data) {
        if (data.traveltime) {
          traveltime = data.traveltime
          button.html(traveltime);
          jump_drive_btn_interval = setInterval(function() {
            traveltime = traveltime - 1
            button.html(traveltime)
            if (traveltime == 0) {
              clearInterval(jump_drive_btn_interval);
            }
          }, 1000)
        }
      }).error(function(data) { button.html(html); });
    });
    
    // remove route button
    $('#app-container').on('click', '.remove-route-btn', function(){
      loading_animation($(this));
      $.post('system/clear_route', function(data) {
        $('.route-card').remove();
        $.each(data.route, function(index, value) {
          var edge = edges.get(value);
          edges.remove(value);
          edges.add({id: value, from: edge.from, to: edge.to, color: { color: 'grey' }, width: 1});
        });
      });
    });
</script>
